/**
 * Cardholder UI Web Components v0.22.0
 * (c) 2024 Marqeta
 * @license MIT
 */
import{r as t,k as i,i as n,j as s}from"./p-18a64bdb.js";import{c as e,G as o,H as a,J as c}from"./p-675e89df.js";import{A as r}from"./p-52af63d3.js";import{o as u,m as d}from"./p-c7bc8265.js";import{C as l}from"./p-cb5bbf71.js";import"./p-0462f723.js";const h="Add money";const m="Link card to add money";var p;(function(t){t["ADD_MONEY"]="ADD_MONEY";t["LINK_CARD"]="LINK_CARD"})(p||(p={}));const b=":host{background:var(--components-universal-backgroundColor);padding:var(--components-universal-padding);border-radius:var(--components-universal-borderRadius);border:var(--components-universal-borderWidth) solid var(--components-universal-borderColor)}.mq-account-container{background-color:var(--components-accounts-accountSummaryBodyColor)}.mq-account-container mq-dropdown button{max-width:40px}.account-actions{gap:var(--spacing-spacing400)}@media screen and (max-width: 600px){.account-actions{flex-direction:column;gap:var(--spacing-spacing200)}.account-actions mq-button .mq-button{width:100%}}@media (max-width: 575px){.mq-add-money-button{width:100%}mq-button.mq-add-money-button>button{width:100%}}";const v=b;var f;(function(t){t["details"]="View account details"})(f||(f={}));var q;(function(t){t["VIEW_ACCOUNT_DETAILS"]="VIEW_ACCOUNT_DETAILS"})(q||(q={}));const y=class{constructor(s){t(this,s);this.mqAccountLoadInitiated=i(this,"mqAccountLoadInitiated",7);this.mqAccountLoadCompleted=i(this,"mqAccountLoadCompleted",7);this.mqAccountActionTriggered=i(this,"mqAccountActionTriggered",7);this.mqAccountActionCompleted=i(this,"mqAccountActionCompleted",7);this.mqAccountActionHook=i(this,"mqAccountActionHook",7);this.modal=document.querySelector("mq-modal");this.initializeModal=()=>{if(!this.modal){document.body.appendChild(document.createElement("mq-modal"));this.modal=document.querySelector("mq-modal")}this.modal.addEventListener("mqAccountViewDetailsSuccess",(()=>this.handleMqAccountViewDetailsSuccess()));this.modal.addEventListener("mqAccountViewDetailsError",(t=>this.handleMqAccountViewDetailsError(t)))};this.hasAccountIssue=()=>{var t,i,n,s;return((i=(t=this.accountHolder)===null||t===void 0?void 0:t.user)===null||i===void 0?void 0:i.hasWarningStatus())||((s=(n=this.accountHolder)===null||n===void 0?void 0:n.user)===null||s===void 0?void 0:s.hasErrorStatus())||!!this.errorMessage};this.loadAccountHolder=async()=>{try{const t=e.get(o);this.accountHolder=await t.execute();if(this.hasAccountIssue()){r.AccountManagement.accountInactive()}this.loadAccountDetails();this.mqAccountLoadCompleted.emit({status:l.SUCCESS})}catch(t){const i=t;this.errorMessage=i.message;r.AccountManagement.Exception(i.message);this.isLoading=false;this.mqAccountLoadCompleted.emit({status:l.ERROR})}};this.loadAccountDetails=async()=>{try{const t=e.get(a);const i=e.get(c);const n=await t.execute();this.accountBalances=n;try{const t=await i.execute();this.selectedDepositAccount=t[0]}catch(t){this.selectedDepositAccount=null}this.accountOptions=[f.details];r.AccountManagement.viewAccountBalance()}catch(t){const i=t;this.errorMessage=i.message;r.AccountManagement.Exception(i.message);this.mqAccountLoadCompleted.emit({status:l.ERROR,error:{code:i.message,message:i.message}})}finally{this.isLoading=false}};this.accountDetailsClick=()=>{var t;this.mqAccountActionTriggered.emit({type:q.VIEW_ACCOUNT_DETAILS});(t=this.modal)===null||t===void 0?void 0:t.showModal("Account details",n("mq-account-details",{"deposit-account-token":this.selectedDepositAccount.token}))};this.handleOptionSelected=t=>{switch(t.detail){case f.details:{this.accountDetailsClick();break}default:{console.warn("Not implemented")}}};this.handleAddMoneyButtonClick=()=>{const{buttonText:t}=this.accountBalances;if(t===h){this.mqAccountActionHook.emit({type:p.ADD_MONEY})}else if(t===m){this.mqAccountActionHook.emit({type:p.LINK_CARD})}};this.showActions=false;this.isLoading=true;this.errorMessage=null;this.accountBalances=undefined;this.accountHolder=undefined;this.accountOptions=undefined;this.selectedDepositAccount=undefined}connectedCallback(){u((t=>{t&&this.loadAccountHolder()}));this.initializeModal();this.mqAccountLoadInitiated.emit()}handleMqAccountViewDetailsSuccess(){this.mqAccountActionCompleted.emit({type:q.VIEW_ACCOUNT_DETAILS,status:l.SUCCESS})}handleMqAccountViewDetailsError(t){this.mqAccountActionCompleted.emit({type:q.VIEW_ACCOUNT_DETAILS,status:l.ERROR,error:{code:t.detail.errorCode}})}disconnectedCallback(){if(this.modal){this.modal.removeEventListener("mqAccountViewDetailsSuccess",(()=>this.handleMqAccountViewDetailsSuccess()));this.modal.removeEventListener("mqAccountViewDetailsError",(t=>this.handleMqAccountViewDetailsError(t)))}}renderAccountBalance(){if(this.isLoading)return n("available-balance",{loading:true});else if(!this.accountBalances||this.accountBalances.getBalanceByCurrencyCode("usd")===null)return null;else return n("flex-container",{justifyContent:"space-between"},n("available-balance",{"currency-code":"usd",balance:this.accountBalances.getBalanceByCurrencyCode("usd"),muted:this.accountHolder.user.status==="CLOSED"}),this.selectedDepositAccount&&n("mq-dropdown",{label:"Show actions",options:this.accountOptions,placement:"bottom-left",onOptionSelected:this.handleOptionSelected},n("mq-icon",{name:"overflow-menu-horizontal",size:"lg"})))}renderActions(){if(!this.showActions){return null}else{const t=this.hasAccountIssue();return n("flex-container",{class:"account-actions"},this.isLoading?n("mq-bone",{height:"40px",width:"148px"}):n("mq-button",{disabled:t},"Primary action"),this.isLoading?n("mq-bone",{height:"40px",width:"148px"}):n("mq-button",{disabled:t},"Secondary action"))}}renderAddMoneyButton(){var t;return n("flex-container",null,this.isLoading?n("mq-bone",{height:"40px",width:"148px"}):n("mq-button",{class:"mq-add-money-button",onClick:this.handleAddMoneyButtonClick},(t=this.accountBalances)===null||t===void 0?void 0:t.buttonText))}renderAccountStatus(){var t,i;if(this.isLoading||!((i=(t=this.accountHolder)===null||t===void 0?void 0:t.user)===null||i===void 0?void 0:i.status)){return null}const s=this.accountHolder.user.status;let e;let o;let a;switch(s){case"UNVERIFIED":e="Your account is pending approval";o=`We are currently verifying your information. Once we approve, your account will be ready for use.`;a="warning";break;case"SUSPENDED":e="Your account has been suspended";o="For further assistance, contact customer support.";a="error";break;case"CLOSED":e="Your account has been permanently closed";a="error";break;default:return null}return n("mq-alert",{class:"status-alert",type:a,heading:e},o)}render(){var t;if(!d.mqCuiReady){return null}return n("theme-provider",null,n("flex-container",{class:"mq-account-container","flex-direction":"column",gap:"var(--spacing-spacing600)"},this.renderAccountBalance(),((t=this.accountBalances)===null||t===void 0?void 0:t.buttonText)&&this.accountBalances.buttonText!==""&&this.renderAddMoneyButton(),this.renderActions(),this.renderAccountStatus(),this.errorMessage&&n("mq-alert",{type:"error",heading:"We've encountered a problem"},this.errorMessage)))}get el(){return s(this)}};y.style=v;export{y as mq_account};
//# sourceMappingURL=p-899f6366.entry.js.map