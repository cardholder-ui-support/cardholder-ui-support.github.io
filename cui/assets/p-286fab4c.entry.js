/**
 * Cardholder UI Web Components v0.22.0
 * (c) 2024 Marqeta
 * @license MIT
 */
import{r as a,k as t,i as s,H as i}from"./p-18a64bdb.js";import{o as r,m as n}from"./p-c7bc8265.js";import{c as o,a5 as c,a6 as e}from"./p-675e89df.js";import{A as d}from"./p-52af63d3.js";import{C as h}from"./p-cb5bbf71.js";import"./p-0462f723.js";const l="mq-transaction{display:block}.txn-header-container{background:var(--colors-primary-primary50, #ebebf7);border-top-left-radius:var(--borderRadius-radius200);border-top-right-radius:var(--borderRadius-radius200);padding:var(--spacing-spacing600) var(--spacing-spacing1000);text-align:center}.txn-footer-container{background-color:var(--styles-background-surfacePrimaryColor);border-bottom-left-radius:var(--borderRadius-radius200);border-bottom-right-radius:var(--borderRadius-radius200);padding:var(--spacing-spacing600) var(--spacing-spacing1000);text-align:center}";const p=l;var u;(function(a){a["REPORT_PROBLEM"]="REPORT_PROBLEM"})(u||(u={}));const m=class{constructor(s){a(this,s);this.mqTransactionLoadInitiated=t(this,"mqTransactionLoadInitiated",7);this.mqTransactionLoadCompleted=t(this,"mqTransactionLoadCompleted",7);this.mqTransactionHook=t(this,"mqTransactionHook",7);this.transactionToken=undefined;this.showReportProblemCta="DISPUTABLE";this.isLoading=true;this.transactionData=undefined;this.txnIcons={}}connectedCallback(){r((a=>{a&&(async()=>{this.mqTransactionLoadInitiated.emit();await this.loadMccIcons();await this.loadTransactionData();d.Transactions.viewTransactionDetails(this.transactionData)})()}))}async loadTransactionData(){try{const a=o.get(c);const t=await a.execute(this.transactionToken);const{data:s}=t;this.transactionData=s;this.mqTransactionLoadCompleted.emit({status:h.SUCCESS,data:{transactionToken:this.transactionToken}});this.isLoading=false}catch(a){this.handleLoadError(a)}}handleLoadError(a){var t;const s=((t=a===null||a===void 0?void 0:a.originalError)===null||t===void 0?void 0:t.message)||"INTERNAL_ERROR";d.Transactions.Exception(a.message);this.mqTransactionLoadCompleted.emit({status:h.ERROR,data:{transactionToken:this.transactionToken},error:{code:s}})}async loadMccIcons(){try{const a=o.get(e);this.txnIcons=await a.execute("txnIcons")}catch(a){d.Transactions.Exception(a===null||a===void 0?void 0:a.message)}}handleReportProblem(a){this.mqTransactionHook.emit({type:u.REPORT_PROBLEM,data:{transactionToken:a}})}render(){if(!n.mqCuiReady){return null}return s(i,null,s("theme-provider",null,s("div",{class:"txn-header-container"},s("flex-container",{"flex-direction":"column",justifyContent:"center",gap:"var(--spacing-spacing200)"},s("transaction-header",{isLoading:this.isLoading,transaction:this.transactionData,icons:this.txnIcons}))),s("div",{class:"txn-footer-container"},s("flex-container",{"flex-direction":"column",justifyContent:"center",gap:"var(--spacing-spacing200)"},s("transaction-body",{isLoading:this.isLoading,transaction:this.transactionData,showReportProblemCta:this.showReportProblemCta,onReportProblem:()=>this.handleReportProblem(this.transactionToken)})))))}};m.style=p;export{m as mq_transaction};
//# sourceMappingURL=p-286fab4c.entry.js.map